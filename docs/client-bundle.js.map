{"version":3,"sources":["webpack:///webpack/bootstrap 190f5fca4da777ccb163","webpack:///./src/client/app.js","webpack:///./src/shared/timer.js"],"names":["window","addEventListener","timer","workDuration","breakDuration","longBreakDuration","startButton","document","querySelector","pauseButton","restartButton","start","pause","restart","config","timerStart","Date","now","pauseStart","completedDurations"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;AC9BA;;;;;;AAEAA,QAAOC,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpC,OAAMC,QAAQ,oBAAU;AACtBC,mBAAc,KAAK,KADG;AAEtBC,oBAAe,IAAI,KAFG;AAGtBC,wBAAmB,KAAK;AAHF,IAAV,CAAd;AAKA,OAAMC,cAAcC,SAASC,aAAT,CAAuB,wBAAvB,CAApB;AACA,OAAMC,cAAcF,SAASC,aAAT,CAAuB,wBAAvB,CAApB;AACA,OAAME,gBAAgBH,SAASC,aAAT,CAAuB,0BAAvB,CAAtB;;AAEAF,eAAYL,gBAAZ,CAA6B,OAA7B,EAAsC,YAAM;AAAEC,WAAMS,KAAN;AAAgB,IAA9D;AACAF,eAAYR,gBAAZ,CAA6B,OAA7B,EAAsC,YAAM;AAAEC,WAAMU,KAAN;AAAgB,IAA9D;AACAF,iBAAcT,gBAAd,CAA+B,OAA/B,EAAwC,YAAM;AAAEC,WAAMW,OAAN;AAAkB,IAAlE;AACD,EAbD,E,CAVA;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;AASA;;;;;AAKE;;;;;;;AAOA,mBAAYC,MAAZ,EAAoB;AAAA;;AAClB,UAAKX,YAAL,GAAoBW,OAAOX,YAA3B;AACA,UAAKC,aAAL,GAAqBU,OAAOV,aAA5B;AACA,UAAKC,iBAAL,GAAyBS,OAAOT,iBAAhC;AACD;;AAED;;;;;;;6BAGQ;AACN,YAAKU,UAAL,GAAkBC,KAAKC,GAAL,EAAlB;AACD;;AAED;;;;;;6BAGQ;AACN,YAAKC,UAAL,GAAkBF,KAAKC,GAAL,EAAlB;AACD;;AAED;;;;;;+BAGU;AACR,YAAKE,kBAAL,GAA0B,CAA1B;AACD","file":"client-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 190f5fca4da777ccb163","/**\n * Pomodoro Timer app behavior\n *\n * @copyright Bill Robitske, Jr. 2017\n * @author Bill Robitske, Jr. <bill.robitske.jr@gmail.com>\n * @license MIT\n */\n\nimport Timer from '../shared/timer';\n\nwindow.addEventListener('load', () => {\n  const timer = new Timer({\n    workDuration: 25 * 60000,\n    breakDuration: 5 * 60000,\n    longBreakDuration: 15 * 60000,\n  });\n  const startButton = document.querySelector('.c-timer__start-button');\n  const pauseButton = document.querySelector('.c-timer__pause-button');\n  const restartButton = document.querySelector('.c-timer__restart-button');\n\n  startButton.addEventListener('click', () => { timer.start(); });\n  pauseButton.addEventListener('click', () => { timer.pause(); });\n  restartButton.addEventListener('click', () => { timer.restart(); });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/app.js","/**\n * Timer module\n *\n * @module\n * @copyright Bill Robitske, Jr. 2017\n * @author Bill Robitske, Jr. <bill.robitske.jr@gmail.com>\n * @license MIT\n */\n\n/**\n * @class\n */\nexport default class {\n\n  /**\n   * @constructor\n   * @param {Object} config This timer's configuration\n   * @param {Number} config.workDuration Length of work durations (ms)\n   * @param {Number} config.breakDuration Length of normal break durations (ms)\n   * @param {Number} config.longBreakDuration Length of long break durations (ms)\n   */\n  constructor(config) {\n    this.workDuration = config.workDuration;\n    this.breakDuration = config.breakDuration;\n    this.longBreakDuration = config.longBreakDuration;\n  }\n\n  /**\n   * Starts the next timer duration\n   */\n  start() {\n    this.timerStart = Date.now();\n  }\n\n  /**\n   * Pauses the current timer duration\n   */\n  pause() {\n    this.pauseStart = Date.now();\n  }\n\n  /**\n   * Restarts the timer\n   */\n  restart() {\n    this.completedDurations = 0;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/timer.js"],"sourceRoot":""}